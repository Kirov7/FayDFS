// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.1
// source: proto/faydfs.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileNameAndMode_Mode int32

const (
	FileNameAndMode_READ  FileNameAndMode_Mode = 0
	FileNameAndMode_WRITE FileNameAndMode_Mode = 1
)

// Enum value maps for FileNameAndMode_Mode.
var (
	FileNameAndMode_Mode_name = map[int32]string{
		0: "READ",
		1: "WRITE",
	}
	FileNameAndMode_Mode_value = map[string]int32{
		"READ":  0,
		"WRITE": 1,
	}
)

func (x FileNameAndMode_Mode) Enum() *FileNameAndMode_Mode {
	p := new(FileNameAndMode_Mode)
	*p = x
	return p
}

func (x FileNameAndMode_Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileNameAndMode_Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_faydfs_proto_enumTypes[0].Descriptor()
}

func (FileNameAndMode_Mode) Type() protoreflect.EnumType {
	return &file_proto_faydfs_proto_enumTypes[0]
}

func (x FileNameAndMode_Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileNameAndMode_Mode.Descriptor instead.
func (FileNameAndMode_Mode) EnumDescriptor() ([]byte, []int) {
	return file_proto_faydfs_proto_rawDescGZIP(), []int{2, 0}
}

type FileNameAndOperateMode_OperateMetaMode int32

const (
	FileNameAndOperateMode_DELETE FileNameAndOperateMode_OperateMetaMode = 0
	FileNameAndOperateMode_MKDIR  FileNameAndOperateMode_OperateMetaMode = 1
)

// Enum value maps for FileNameAndOperateMode_OperateMetaMode.
var (
	FileNameAndOperateMode_OperateMetaMode_name = map[int32]string{
		0: "DELETE",
		1: "MKDIR",
	}
	FileNameAndOperateMode_OperateMetaMode_value = map[string]int32{
		"DELETE": 0,
		"MKDIR":  1,
	}
)

func (x FileNameAndOperateMode_OperateMetaMode) Enum() *FileNameAndOperateMode_OperateMetaMode {
	p := new(FileNameAndOperateMode_OperateMetaMode)
	*p = x
	return p
}

func (x FileNameAndOperateMode_OperateMetaMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileNameAndOperateMode_OperateMetaMode) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_faydfs_proto_enumTypes[1].Descriptor()
}

func (FileNameAndOperateMode_OperateMetaMode) Type() protoreflect.EnumType {
	return &file_proto_faydfs_proto_enumTypes[1]
}

func (x FileNameAndOperateMode_OperateMetaMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileNameAndOperateMode_OperateMetaMode.Descriptor instead.
func (FileNameAndOperateMode_OperateMetaMode) EnumDescriptor() ([]byte, []int) {
	return file_proto_faydfs_proto_rawDescGZIP(), []int{3, 0}
}

type BlockLocation_ReplicaMetaState int32

const (
	BlockLocation_ReplicaPending   BlockLocation_ReplicaMetaState = 0
	BlockLocation_ReplicaCommitted BlockLocation_ReplicaMetaState = 1
)

// Enum value maps for BlockLocation_ReplicaMetaState.
var (
	BlockLocation_ReplicaMetaState_name = map[int32]string{
		0: "ReplicaPending",
		1: "ReplicaCommitted",
	}
	BlockLocation_ReplicaMetaState_value = map[string]int32{
		"ReplicaPending":   0,
		"ReplicaCommitted": 1,
	}
)

func (x BlockLocation_ReplicaMetaState) Enum() *BlockLocation_ReplicaMetaState {
	p := new(BlockLocation_ReplicaMetaState)
	*p = x
	return p
}

func (x BlockLocation_ReplicaMetaState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BlockLocation_ReplicaMetaState) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_faydfs_proto_enumTypes[2].Descriptor()
}

func (BlockLocation_ReplicaMetaState) Type() protoreflect.EnumType {
	return &file_proto_faydfs_proto_enumTypes[2]
}

func (x BlockLocation_ReplicaMetaState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BlockLocation_ReplicaMetaState.Descriptor instead.
func (BlockLocation_ReplicaMetaState) EnumDescriptor() ([]byte, []int) {
	return file_proto_faydfs_proto_rawDescGZIP(), []int{8, 0}
}

type DatanodeOperation_Operation int32

const (
	DatanodeOperation_DELETE    DatanodeOperation_Operation = 0
	DatanodeOperation_REPLICATE DatanodeOperation_Operation = 1
)

// Enum value maps for DatanodeOperation_Operation.
var (
	DatanodeOperation_Operation_name = map[int32]string{
		0: "DELETE",
		1: "REPLICATE",
	}
	DatanodeOperation_Operation_value = map[string]int32{
		"DELETE":    0,
		"REPLICATE": 1,
	}
)

func (x DatanodeOperation_Operation) Enum() *DatanodeOperation_Operation {
	p := new(DatanodeOperation_Operation)
	*p = x
	return p
}

func (x DatanodeOperation_Operation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DatanodeOperation_Operation) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_faydfs_proto_enumTypes[3].Descriptor()
}

func (DatanodeOperation_Operation) Type() protoreflect.EnumType {
	return &file_proto_faydfs_proto_enumTypes[3]
}

func (x DatanodeOperation_Operation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DatanodeOperation_Operation.Descriptor instead.
func (DatanodeOperation_Operation) EnumDescriptor() ([]byte, []int) {
	return file_proto_faydfs_proto_rawDescGZIP(), []int{15, 0}
}

type FileWriteStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File             *File             `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	BlockReplicaList *BlockReplicaList `protobuf:"bytes,2,opt,name=BlockReplicaList,proto3" json:"BlockReplicaList,omitempty"`
}

func (x *FileWriteStream) Reset() {
	*x = FileWriteStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_faydfs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileWriteStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileWriteStream) ProtoMessage() {}

func (x *FileWriteStream) ProtoReflect() protoreflect.Message {
	mi := &file_proto_faydfs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileWriteStream.ProtoReflect.Descriptor instead.
func (*FileWriteStream) Descriptor() ([]byte, []int) {
	return file_proto_faydfs_proto_rawDescGZIP(), []int{0}
}

func (x *FileWriteStream) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *FileWriteStream) GetBlockReplicaList() *BlockReplicaList {
	if x != nil {
		return x.BlockReplicaList
	}
	return nil
}

type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content []byte `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_faydfs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_proto_faydfs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_proto_faydfs_proto_rawDescGZIP(), []int{1}
}

func (x *File) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

// 文件路径名称与要做的操作
type FileNameAndMode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName string               `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	Mode     FileNameAndMode_Mode `protobuf:"varint,2,opt,name=mode,proto3,enum=proto.FileNameAndMode_Mode" json:"mode,omitempty"`
	BlockNum int64                `protobuf:"varint,3,opt,name=blockNum,proto3" json:"blockNum,omitempty"`
}

func (x *FileNameAndMode) Reset() {
	*x = FileNameAndMode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_faydfs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileNameAndMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileNameAndMode) ProtoMessage() {}

func (x *FileNameAndMode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_faydfs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileNameAndMode.ProtoReflect.Descriptor instead.
func (*FileNameAndMode) Descriptor() ([]byte, []int) {
	return file_proto_faydfs_proto_rawDescGZIP(), []int{2}
}

func (x *FileNameAndMode) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FileNameAndMode) GetMode() FileNameAndMode_Mode {
	if x != nil {
		return x.Mode
	}
	return FileNameAndMode_READ
}

func (x *FileNameAndMode) GetBlockNum() int64 {
	if x != nil {
		return x.BlockNum
	}
	return 0
}

type FileNameAndOperateMode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName string                                 `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	Mode     FileNameAndOperateMode_OperateMetaMode `protobuf:"varint,2,opt,name=mode,proto3,enum=proto.FileNameAndOperateMode_OperateMetaMode" json:"mode,omitempty"`
}

func (x *FileNameAndOperateMode) Reset() {
	*x = FileNameAndOperateMode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_faydfs_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileNameAndOperateMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileNameAndOperateMode) ProtoMessage() {}

func (x *FileNameAndOperateMode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_faydfs_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileNameAndOperateMode.ProtoReflect.Descriptor instead.
func (*FileNameAndOperateMode) Descriptor() ([]byte, []int) {
	return file_proto_faydfs_proto_rawDescGZIP(), []int{3}
}

func (x *FileNameAndOperateMode) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FileNameAndOperateMode) GetMode() FileNameAndOperateMode_OperateMetaMode {
	if x != nil {
		return x.Mode
	}
	return FileNameAndOperateMode_DELETE
}

type SrcAndDestPath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RenameSrcPath  string `protobuf:"bytes,1,opt,name=renameSrcPath,proto3" json:"renameSrcPath,omitempty"`
	RenameDestPath string `protobuf:"bytes,2,opt,name=renameDestPath,proto3" json:"renameDestPath,omitempty"`
}

func (x *SrcAndDestPath) Reset() {
	*x = SrcAndDestPath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_faydfs_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SrcAndDestPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SrcAndDestPath) ProtoMessage() {}

func (x *SrcAndDestPath) ProtoReflect() protoreflect.Message {
	mi := &file_proto_faydfs_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SrcAndDestPath.ProtoReflect.Descriptor instead.
func (*SrcAndDestPath) Descriptor() ([]byte, []int) {
	return file_proto_faydfs_proto_rawDescGZIP(), []int{4}
}

func (x *SrcAndDestPath) GetRenameSrcPath() string {
	if x != nil {
		return x.RenameSrcPath
	}
	return ""
}

func (x *SrcAndDestPath) GetRenameDestPath() string {
	if x != nil {
		return x.RenameDestPath
	}
	return ""
}

type PathName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PathName string `protobuf:"bytes,1,opt,name=pathName,proto3" json:"pathName,omitempty"`
}

func (x *PathName) Reset() {
	*x = PathName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_faydfs_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PathName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathName) ProtoMessage() {}

func (x *PathName) ProtoReflect() protoreflect.Message {
	mi := &file_proto_faydfs_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathName.ProtoReflect.Descriptor instead.
func (*PathName) Descriptor() ([]byte, []int) {
	return file_proto_faydfs_proto_rawDescGZIP(), []int{5}
}

func (x *PathName) GetPathName() string {
	if x != nil {
		return x.PathName
	}
	return ""
}

type FileLocationArr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileBlocksList []*BlockReplicaList `protobuf:"bytes,1,rep,name=FileBlocksList,proto3" json:"FileBlocksList,omitempty"`
}

func (x *FileLocationArr) Reset() {
	*x = FileLocationArr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_faydfs_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileLocationArr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileLocationArr) ProtoMessage() {}

func (x *FileLocationArr) ProtoReflect() protoreflect.Message {
	mi := &file_proto_faydfs_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileLocationArr.ProtoReflect.Descriptor instead.
func (*FileLocationArr) Descriptor() ([]byte, []int) {
	return file_proto_faydfs_proto_rawDescGZIP(), []int{6}
}

func (x *FileLocationArr) GetFileBlocksList() []*BlockReplicaList {
	if x != nil {
		return x.FileBlocksList
	}
	return nil
}

type BlockReplicaList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockReplicaList []*BlockLocation `protobuf:"bytes,1,rep,name=BlockReplicaList,proto3" json:"BlockReplicaList,omitempty"`
}

func (x *BlockReplicaList) Reset() {
	*x = BlockReplicaList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_faydfs_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockReplicaList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockReplicaList) ProtoMessage() {}

func (x *BlockReplicaList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_faydfs_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockReplicaList.ProtoReflect.Descriptor instead.
func (*BlockReplicaList) Descriptor() ([]byte, []int) {
	return file_proto_faydfs_proto_rawDescGZIP(), []int{7}
}

func (x *BlockReplicaList) GetBlockReplicaList() []*BlockLocation {
	if x != nil {
		return x.BlockReplicaList
	}
	return nil
}

type BlockLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpAddr       string                         `protobuf:"bytes,1,opt,name=ipAddr,proto3" json:"ipAddr,omitempty"`
	BlockName    string                         `protobuf:"bytes,2,opt,name=blockName,proto3" json:"blockName,omitempty"`
	BlockSize    int64                          `protobuf:"varint,3,opt,name=blockSize,proto3" json:"blockSize,omitempty"`
	ReplicaID    int64                          `protobuf:"varint,4,opt,name=replicaID,proto3" json:"replicaID,omitempty"`
	ReplicaState BlockLocation_ReplicaMetaState `protobuf:"varint,5,opt,name=replicaState,proto3,enum=proto.BlockLocation_ReplicaMetaState" json:"replicaState,omitempty"`
}

func (x *BlockLocation) Reset() {
	*x = BlockLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_faydfs_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockLocation) ProtoMessage() {}

func (x *BlockLocation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_faydfs_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockLocation.ProtoReflect.Descriptor instead.
func (*BlockLocation) Descriptor() ([]byte, []int) {
	return file_proto_faydfs_proto_rawDescGZIP(), []int{8}
}

func (x *BlockLocation) GetIpAddr() string {
	if x != nil {
		return x.IpAddr
	}
	return ""
}

func (x *BlockLocation) GetBlockName() string {
	if x != nil {
		return x.BlockName
	}
	return ""
}

func (x *BlockLocation) GetBlockSize() int64 {
	if x != nil {
		return x.BlockSize
	}
	return 0
}

func (x *BlockLocation) GetReplicaID() int64 {
	if x != nil {
		return x.ReplicaID
	}
	return 0
}

func (x *BlockLocation) GetReplicaState() BlockLocation_ReplicaMetaState {
	if x != nil {
		return x.ReplicaState
	}
	return BlockLocation_ReplicaPending
}

type OperateStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *OperateStatus) Reset() {
	*x = OperateStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_faydfs_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperateStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperateStatus) ProtoMessage() {}

func (x *OperateStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_faydfs_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperateStatus.ProtoReflect.Descriptor instead.
func (*OperateStatus) Descriptor() ([]byte, []int) {
	return file_proto_faydfs_proto_rawDescGZIP(), []int{9}
}

func (x *OperateStatus) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type FileMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName string `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	FileSize string `protobuf:"bytes,2,opt,name=fileSize,proto3" json:"fileSize,omitempty"`
	IsDir    bool   `protobuf:"varint,3,opt,name=isDir,proto3" json:"isDir,omitempty"`
}

func (x *FileMeta) Reset() {
	*x = FileMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_faydfs_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMeta) ProtoMessage() {}

func (x *FileMeta) ProtoReflect() protoreflect.Message {
	mi := &file_proto_faydfs_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMeta.ProtoReflect.Descriptor instead.
func (*FileMeta) Descriptor() ([]byte, []int) {
	return file_proto_faydfs_proto_rawDescGZIP(), []int{10}
}

func (x *FileMeta) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FileMeta) GetFileSize() string {
	if x != nil {
		return x.FileSize
	}
	return ""
}

func (x *FileMeta) GetIsDir() bool {
	if x != nil {
		return x.IsDir
	}
	return false
}

type DirMetaList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetaList []*FileMeta `protobuf:"bytes,1,rep,name=metaList,proto3" json:"metaList,omitempty"`
}

func (x *DirMetaList) Reset() {
	*x = DirMetaList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_faydfs_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirMetaList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirMetaList) ProtoMessage() {}

func (x *DirMetaList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_faydfs_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirMetaList.ProtoReflect.Descriptor instead.
func (*DirMetaList) Descriptor() ([]byte, []int) {
	return file_proto_faydfs_proto_rawDescGZIP(), []int{11}
}

func (x *DirMetaList) GetMetaList() []*FileMeta {
	if x != nil {
		return x.MetaList
	}
	return nil
}

type Ping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ping string `protobuf:"bytes,1,opt,name=ping,proto3" json:"ping,omitempty"`
}

func (x *Ping) Reset() {
	*x = Ping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_faydfs_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ping) ProtoMessage() {}

func (x *Ping) ProtoReflect() protoreflect.Message {
	mi := &file_proto_faydfs_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ping.ProtoReflect.Descriptor instead.
func (*Ping) Descriptor() ([]byte, []int) {
	return file_proto_faydfs_proto_rawDescGZIP(), []int{12}
}

func (x *Ping) GetPing() string {
	if x != nil {
		return x.Ping
	}
	return ""
}

type Heartbeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpAddr    string `protobuf:"bytes,1,opt,name=ipAddr,proto3" json:"ipAddr,omitempty"`
	DiskUsage uint64 `protobuf:"varint,2,opt,name=DiskUsage,proto3" json:"DiskUsage,omitempty"`
}

func (x *Heartbeat) Reset() {
	*x = Heartbeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_faydfs_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Heartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Heartbeat) ProtoMessage() {}

func (x *Heartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_proto_faydfs_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Heartbeat.ProtoReflect.Descriptor instead.
func (*Heartbeat) Descriptor() ([]byte, []int) {
	return file_proto_faydfs_proto_rawDescGZIP(), []int{13}
}

func (x *Heartbeat) GetIpAddr() string {
	if x != nil {
		return x.IpAddr
	}
	return ""
}

func (x *Heartbeat) GetDiskUsage() uint64 {
	if x != nil {
		return x.DiskUsage
	}
	return 0
}

type RegisterDataNodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	New       bool   `protobuf:"varint,1,opt,name=new,proto3" json:"new,omitempty"`
	DiskUsage uint64 `protobuf:"varint,2,opt,name=DiskUsage,proto3" json:"DiskUsage,omitempty"`
	IpAddr    string `protobuf:"bytes,3,opt,name=ipAddr,proto3" json:"ipAddr,omitempty"`
}

func (x *RegisterDataNodeReq) Reset() {
	*x = RegisterDataNodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_faydfs_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterDataNodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDataNodeReq) ProtoMessage() {}

func (x *RegisterDataNodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_faydfs_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDataNodeReq.ProtoReflect.Descriptor instead.
func (*RegisterDataNodeReq) Descriptor() ([]byte, []int) {
	return file_proto_faydfs_proto_rawDescGZIP(), []int{14}
}

func (x *RegisterDataNodeReq) GetNew() bool {
	if x != nil {
		return x.New
	}
	return false
}

func (x *RegisterDataNodeReq) GetDiskUsage() uint64 {
	if x != nil {
		return x.DiskUsage
	}
	return 0
}

func (x *RegisterDataNodeReq) GetIpAddr() string {
	if x != nil {
		return x.IpAddr
	}
	return ""
}

type DatanodeOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operation DatanodeOperation_Operation `protobuf:"varint,1,opt,name=operation,proto3,enum=proto.DatanodeOperation_Operation" json:"operation,omitempty"`
	IpAddr    string                      `protobuf:"bytes,2,opt,name=ipAddr,proto3" json:"ipAddr,omitempty"`
}

func (x *DatanodeOperation) Reset() {
	*x = DatanodeOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_faydfs_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatanodeOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatanodeOperation) ProtoMessage() {}

func (x *DatanodeOperation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_faydfs_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatanodeOperation.ProtoReflect.Descriptor instead.
func (*DatanodeOperation) Descriptor() ([]byte, []int) {
	return file_proto_faydfs_proto_rawDescGZIP(), []int{15}
}

func (x *DatanodeOperation) GetOperation() DatanodeOperation_Operation {
	if x != nil {
		return x.Operation
	}
	return DatanodeOperation_DELETE
}

func (x *DatanodeOperation) GetIpAddr() string {
	if x != nil {
		return x.IpAddr
	}
	return ""
}

type MetaStore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileLocationArr *FileLocationArr `protobuf:"bytes,1,opt,name=fileLocationArr,proto3" json:"fileLocationArr,omitempty"`
	FilePath        string           `protobuf:"bytes,2,opt,name=filePath,proto3" json:"filePath,omitempty"`
	FileSize        uint64           `protobuf:"varint,3,opt,name=fileSize,proto3" json:"fileSize,omitempty"`
	ClientName      string           `protobuf:"bytes,4,opt,name=clientName,proto3" json:"clientName,omitempty"`
}

func (x *MetaStore) Reset() {
	*x = MetaStore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_faydfs_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaStore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaStore) ProtoMessage() {}

func (x *MetaStore) ProtoReflect() protoreflect.Message {
	mi := &file_proto_faydfs_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaStore.ProtoReflect.Descriptor instead.
func (*MetaStore) Descriptor() ([]byte, []int) {
	return file_proto_faydfs_proto_rawDescGZIP(), []int{16}
}

func (x *MetaStore) GetFileLocationArr() *FileLocationArr {
	if x != nil {
		return x.FileLocationArr
	}
	return nil
}

func (x *MetaStore) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *MetaStore) GetFileSize() uint64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *MetaStore) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

type GetLease struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pathname   *PathName `protobuf:"bytes,1,opt,name=pathname,proto3" json:"pathname,omitempty"`
	ClientName string    `protobuf:"bytes,2,opt,name=clientName,proto3" json:"clientName,omitempty"`
}

func (x *GetLease) Reset() {
	*x = GetLease{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_faydfs_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLease) ProtoMessage() {}

func (x *GetLease) ProtoReflect() protoreflect.Message {
	mi := &file_proto_faydfs_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLease.ProtoReflect.Descriptor instead.
func (*GetLease) Descriptor() ([]byte, []int) {
	return file_proto_faydfs_proto_rawDescGZIP(), []int{17}
}

func (x *GetLease) GetPathname() *PathName {
	if x != nil {
		return x.Pathname
	}
	return nil
}

func (x *GetLease) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

type CopyReplica2DN struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockName string `protobuf:"bytes,1,opt,name=blockName,proto3" json:"blockName,omitempty"`
	NewIP     string `protobuf:"bytes,2,opt,name=newIP,proto3" json:"newIP,omitempty"`
}

func (x *CopyReplica2DN) Reset() {
	*x = CopyReplica2DN{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_faydfs_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CopyReplica2DN) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyReplica2DN) ProtoMessage() {}

func (x *CopyReplica2DN) ProtoReflect() protoreflect.Message {
	mi := &file_proto_faydfs_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyReplica2DN.ProtoReflect.Descriptor instead.
func (*CopyReplica2DN) Descriptor() ([]byte, []int) {
	return file_proto_faydfs_proto_rawDescGZIP(), []int{18}
}

func (x *CopyReplica2DN) GetBlockName() string {
	if x != nil {
		return x.BlockName
	}
	return ""
}

func (x *CopyReplica2DN) GetNewIP() string {
	if x != nil {
		return x.NewIP
	}
	return ""
}

var File_proto_faydfs_proto protoreflect.FileDescriptor

var file_proto_faydfs_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x61, 0x79, 0x64, 0x66, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x77, 0x0a, 0x0f, 0x46,
	0x69, 0x6c, 0x65, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x1f,
	0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x43, 0x0a, 0x10, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x10, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x20, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x97, 0x01, 0x0a, 0x0f, 0x46, 0x69, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x41, 0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x41, 0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x4e, 0x75, 0x6d, 0x22, 0x1b, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x52,
	0x45, 0x41, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x57, 0x52, 0x49, 0x54, 0x45, 0x10, 0x01,
	0x22, 0xa1, 0x01, 0x0a, 0x16, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x41, 0x6e, 0x64,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x41, 0x6e, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0x28, 0x0a, 0x0f, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0a, 0x0a,
	0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x4b, 0x44,
	0x49, 0x52, 0x10, 0x01, 0x22, 0x5e, 0x0a, 0x0e, 0x53, 0x72, 0x63, 0x41, 0x6e, 0x64, 0x44, 0x65,
	0x73, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x53, 0x72, 0x63, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x63, 0x50, 0x61, 0x74, 0x68, 0x12, 0x26, 0x0a, 0x0e,
	0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x44, 0x65, 0x73, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x44, 0x65, 0x73, 0x74,
	0x50, 0x61, 0x74, 0x68, 0x22, 0x26, 0x0a, 0x08, 0x50, 0x61, 0x74, 0x68, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x74, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x74, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x52, 0x0a, 0x0f,
	0x46, 0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x72, 0x12,
	0x3f, 0x0a, 0x0e, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x0e, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x54, 0x0a, 0x10, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x10, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x8a, 0x02, 0x0a, 0x0d, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x70, 0x41, 0x64,
	0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72,
	0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x12, 0x49, 0x0a, 0x0c, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x4d, 0x65,
	0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x3c, 0x0a, 0x10, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x4d, 0x65, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x00, 0x12, 0x14, 0x0a,
	0x10, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65,
	0x64, 0x10, 0x01, 0x22, 0x29, 0x0a, 0x0d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x58,
	0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x44, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x69, 0x73, 0x44, 0x69, 0x72, 0x22, 0x3a, 0x0a, 0x0b, 0x44, 0x69, 0x72, 0x4d,
	0x65, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x1a, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x69, 0x6e, 0x67,
	0x22, 0x41, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69,
	0x70, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x69, 0x73, 0x6b, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x44, 0x69, 0x73, 0x6b, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x5d, 0x0a, 0x13, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x65,
	0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x6e, 0x65, 0x77, 0x12, 0x1c, 0x0a, 0x09,
	0x44, 0x69, 0x73, 0x6b, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x44, 0x69, 0x73, 0x6b, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x70,
	0x41, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x70, 0x41, 0x64,
	0x64, 0x72, 0x22, 0x95, 0x01, 0x0a, 0x11, 0x44, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x70,
	0x41, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x70, 0x41, 0x64,
	0x64, 0x72, 0x22, 0x26, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x52,
	0x45, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x45, 0x10, 0x01, 0x22, 0xa5, 0x01, 0x0a, 0x09, 0x4d,
	0x65, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x40, 0x0a, 0x0f, 0x66, 0x69, 0x6c, 0x65,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x72, 0x52, 0x0f, 0x66, 0x69, 0x6c, 0x65, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x57, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x2b,
	0x0a, 0x08, 0x70, 0x61, 0x74, 0x68, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x08, 0x70, 0x61, 0x74, 0x68, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x44, 0x0a, 0x0e, 0x43,
	0x6f, 0x70, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x32, 0x44, 0x4e, 0x12, 0x1c, 0x0a,
	0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e,
	0x65, 0x77, 0x49, 0x50, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x65, 0x77, 0x49,
	0x50, 0x32, 0xe6, 0x03, 0x0a, 0x03, 0x43, 0x32, 0x4e, 0x12, 0x4e, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x64, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x41, 0x6e, 0x64, 0x4d, 0x6f, 0x64,
	0x65, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x72, 0x12, 0x3c, 0x0a, 0x0a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x41, 0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x1a,
	0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x72, 0x12, 0x42, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x41, 0x6e, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3f, 0x0a, 0x10, 0x52,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x12,
	0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x72, 0x63, 0x41, 0x6e, 0x64, 0x44, 0x65,
	0x73, 0x74, 0x50, 0x61, 0x74, 0x68, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2f, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x0f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x0f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x31, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x44, 0x69, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x0f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x12, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x69, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x34, 0x0a, 0x0a, 0x50, 0x75, 0x74, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x32, 0x0a, 0x09, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x4c,
	0x6f, 0x63, 0x6b, 0x12, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4c,
	0x65, 0x61, 0x73, 0x65, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0x7a, 0x0a, 0x03, 0x43, 0x32,
	0x44, 0x12, 0x33, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x16, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x41, 0x6e,
	0x64, 0x4d, 0x6f, 0x64, 0x65, 0x1a, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x3e, 0x0a, 0x0a, 0x57, 0x72, 0x69, 0x74, 0x65, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x1a, 0x14, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x00, 0x28, 0x01, 0x32, 0x7b, 0x0a, 0x03, 0x4e, 0x32, 0x44, 0x12, 0x36, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x1a, 0x17, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0d, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x52,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x6f, 0x70, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x32, 0x44, 0x4e, 0x1a, 0x14, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x32, 0xca, 0x01, 0x0a, 0x03, 0x44, 0x32, 0x4e, 0x12, 0x3f, 0x0a, 0x11, 0x44,
	0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74,
	0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65,
	0x61, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x6e,
	0x6f, 0x64, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x0b,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x17, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x4c, 0x69, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x44, 0x0a, 0x10, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_faydfs_proto_rawDescOnce sync.Once
	file_proto_faydfs_proto_rawDescData = file_proto_faydfs_proto_rawDesc
)

func file_proto_faydfs_proto_rawDescGZIP() []byte {
	file_proto_faydfs_proto_rawDescOnce.Do(func() {
		file_proto_faydfs_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_faydfs_proto_rawDescData)
	})
	return file_proto_faydfs_proto_rawDescData
}

var file_proto_faydfs_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_proto_faydfs_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_proto_faydfs_proto_goTypes = []interface{}{
	(FileNameAndMode_Mode)(0),                   // 0: proto.FileNameAndMode.Mode
	(FileNameAndOperateMode_OperateMetaMode)(0), // 1: proto.FileNameAndOperateMode.OperateMetaMode
	(BlockLocation_ReplicaMetaState)(0),         // 2: proto.BlockLocation.ReplicaMetaState
	(DatanodeOperation_Operation)(0),            // 3: proto.DatanodeOperation.Operation
	(*FileWriteStream)(nil),                     // 4: proto.FileWriteStream
	(*File)(nil),                                // 5: proto.File
	(*FileNameAndMode)(nil),                     // 6: proto.FileNameAndMode
	(*FileNameAndOperateMode)(nil),              // 7: proto.FileNameAndOperateMode
	(*SrcAndDestPath)(nil),                      // 8: proto.SrcAndDestPath
	(*PathName)(nil),                            // 9: proto.PathName
	(*FileLocationArr)(nil),                     // 10: proto.FileLocationArr
	(*BlockReplicaList)(nil),                    // 11: proto.BlockReplicaList
	(*BlockLocation)(nil),                       // 12: proto.BlockLocation
	(*OperateStatus)(nil),                       // 13: proto.OperateStatus
	(*FileMeta)(nil),                            // 14: proto.FileMeta
	(*DirMetaList)(nil),                         // 15: proto.DirMetaList
	(*Ping)(nil),                                // 16: proto.Ping
	(*Heartbeat)(nil),                           // 17: proto.Heartbeat
	(*RegisterDataNodeReq)(nil),                 // 18: proto.RegisterDataNodeReq
	(*DatanodeOperation)(nil),                   // 19: proto.DatanodeOperation
	(*MetaStore)(nil),                           // 20: proto.MetaStore
	(*GetLease)(nil),                            // 21: proto.GetLease
	(*CopyReplica2DN)(nil),                      // 22: proto.CopyReplica2DN
}
var file_proto_faydfs_proto_depIdxs = []int32{
	5,  // 0: proto.FileWriteStream.file:type_name -> proto.File
	11, // 1: proto.FileWriteStream.BlockReplicaList:type_name -> proto.BlockReplicaList
	0,  // 2: proto.FileNameAndMode.mode:type_name -> proto.FileNameAndMode.Mode
	1,  // 3: proto.FileNameAndOperateMode.mode:type_name -> proto.FileNameAndOperateMode.OperateMetaMode
	11, // 4: proto.FileLocationArr.FileBlocksList:type_name -> proto.BlockReplicaList
	12, // 5: proto.BlockReplicaList.BlockReplicaList:type_name -> proto.BlockLocation
	2,  // 6: proto.BlockLocation.replicaState:type_name -> proto.BlockLocation.ReplicaMetaState
	14, // 7: proto.DirMetaList.metaList:type_name -> proto.FileMeta
	3,  // 8: proto.DatanodeOperation.operation:type_name -> proto.DatanodeOperation.Operation
	10, // 9: proto.MetaStore.fileLocationArr:type_name -> proto.FileLocationArr
	9,  // 10: proto.GetLease.pathname:type_name -> proto.PathName
	6,  // 11: proto.C2N.GetFileLocationAndModifyMeta:input_type -> proto.FileNameAndMode
	6,  // 12: proto.C2N.CreateFile:input_type -> proto.FileNameAndMode
	7,  // 13: proto.C2N.OperateMeta:input_type -> proto.FileNameAndOperateMode
	8,  // 14: proto.C2N.RenameFileInMeta:input_type -> proto.SrcAndDestPath
	9,  // 15: proto.C2N.GetFileMeta:input_type -> proto.PathName
	9,  // 16: proto.C2N.GetDirMeta:input_type -> proto.PathName
	20, // 17: proto.C2N.PutSuccess:input_type -> proto.MetaStore
	21, // 18: proto.C2N.RenewLock:input_type -> proto.GetLease
	6,  // 19: proto.C2D.GetBlock:input_type -> proto.FileNameAndMode
	4,  // 20: proto.C2D.WriteBlock:input_type -> proto.FileWriteStream
	16, // 21: proto.N2D.GetBlockReport:input_type -> proto.Ping
	22, // 22: proto.N2D.ReloadReplica:input_type -> proto.CopyReplica2DN
	17, // 23: proto.D2N.DatanodeHeartbeat:input_type -> proto.Heartbeat
	11, // 24: proto.D2N.BlockReport:input_type -> proto.BlockReplicaList
	18, // 25: proto.D2N.RegisterDataNode:input_type -> proto.RegisterDataNodeReq
	10, // 26: proto.C2N.GetFileLocationAndModifyMeta:output_type -> proto.FileLocationArr
	10, // 27: proto.C2N.CreateFile:output_type -> proto.FileLocationArr
	13, // 28: proto.C2N.OperateMeta:output_type -> proto.OperateStatus
	13, // 29: proto.C2N.RenameFileInMeta:output_type -> proto.OperateStatus
	14, // 30: proto.C2N.GetFileMeta:output_type -> proto.FileMeta
	15, // 31: proto.C2N.GetDirMeta:output_type -> proto.DirMetaList
	13, // 32: proto.C2N.PutSuccess:output_type -> proto.OperateStatus
	13, // 33: proto.C2N.RenewLock:output_type -> proto.OperateStatus
	5,  // 34: proto.C2D.GetBlock:output_type -> proto.File
	13, // 35: proto.C2D.WriteBlock:output_type -> proto.OperateStatus
	11, // 36: proto.N2D.GetBlockReport:output_type -> proto.BlockReplicaList
	13, // 37: proto.N2D.ReloadReplica:output_type -> proto.OperateStatus
	19, // 38: proto.D2N.DatanodeHeartbeat:output_type -> proto.DatanodeOperation
	13, // 39: proto.D2N.BlockReport:output_type -> proto.OperateStatus
	13, // 40: proto.D2N.RegisterDataNode:output_type -> proto.OperateStatus
	26, // [26:41] is the sub-list for method output_type
	11, // [11:26] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_proto_faydfs_proto_init() }
func file_proto_faydfs_proto_init() {
	if File_proto_faydfs_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_faydfs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileWriteStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_faydfs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_faydfs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileNameAndMode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_faydfs_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileNameAndOperateMode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_faydfs_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SrcAndDestPath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_faydfs_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PathName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_faydfs_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileLocationArr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_faydfs_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockReplicaList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_faydfs_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_faydfs_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperateStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_faydfs_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_faydfs_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirMetaList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_faydfs_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_faydfs_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Heartbeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_faydfs_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterDataNodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_faydfs_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatanodeOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_faydfs_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaStore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_faydfs_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLease); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_faydfs_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CopyReplica2DN); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_faydfs_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_proto_faydfs_proto_goTypes,
		DependencyIndexes: file_proto_faydfs_proto_depIdxs,
		EnumInfos:         file_proto_faydfs_proto_enumTypes,
		MessageInfos:      file_proto_faydfs_proto_msgTypes,
	}.Build()
	File_proto_faydfs_proto = out.File
	file_proto_faydfs_proto_rawDesc = nil
	file_proto_faydfs_proto_goTypes = nil
	file_proto_faydfs_proto_depIdxs = nil
}
